TeamMembershipsApi:
  get_team_membership: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    team_memberships_api_instance = asana.TeamMembershipsApi(api_client)
    team_membership_gid = "724362" # str | 
    opts = {
        'opt_fields': "is_admin,is_guest,is_limited_access,team,team.name,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Get a team membership
        api_response = team_memberships_api_instance.get_team_membership(team_membership_gid, opts)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling TeamMembershipsApi->get_team_membership: %s\n" % e)
  get_team_memberships: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    team_memberships_api_instance = asana.TeamMembershipsApi(api_client)
    opts = {
        'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
        'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*
        'team': "159874", # str | Globally unique identifier for the team.
        'user': "512241", # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user. This parameter must be used with the workspace parameter.
        'workspace': "31326", # str | Globally unique identifier for the workspace. This parameter must be used with the user parameter.
        'opt_fields': "is_admin,is_guest,is_limited_access,offset,path,team,team.name,uri,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Get team memberships
        api_response = team_memberships_api_instance.get_team_memberships(opts)
        for data in api_response:
            pprint(data)
    except ApiException as e:
        print("Exception when calling TeamMembershipsApi->get_team_memberships: %s\n" % e)
  get_team_memberships_for_team: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    team_memberships_api_instance = asana.TeamMembershipsApi(api_client)
    team_gid = "159874" # str | Globally unique identifier for the team.
    opts = {
        'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
        'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*
        'opt_fields': "is_admin,is_guest,is_limited_access,offset,path,team,team.name,uri,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Get memberships from a team
        api_response = team_memberships_api_instance.get_team_memberships_for_team(team_gid, opts)
        for data in api_response:
            pprint(data)
    except ApiException as e:
        print("Exception when calling TeamMembershipsApi->get_team_memberships_for_team: %s\n" % e)
  get_team_memberships_for_user: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    team_memberships_api_instance = asana.TeamMembershipsApi(api_client)
    user_gid = "me" # str | A string identifying a user. This can either be the string \"me\", an email, or the gid of a user.
    workspace = "31326" # str | Globally unique identifier for the workspace.
    opts = {
        'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
        'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*
        'opt_fields': "is_admin,is_guest,is_limited_access,offset,path,team,team.name,uri,user,user.name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Get memberships from a user
        api_response = team_memberships_api_instance.get_team_memberships_for_user(user_gid, workspace, opts)
        for data in api_response:
            pprint(data)
    except ApiException as e:
        print("Exception when calling TeamMembershipsApi->get_team_memberships_for_user: %s\n" % e)
