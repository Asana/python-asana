TimeTrackingEntriesApi:
  create_time_tracking_entry: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
    body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | Information about the time tracking entry.
    task_gid = "321654" # str | The task to operate on.
    opts = {
        'opt_fields': "created_at,created_by,created_by.name,duration_minutes,entered_on,task,task.created_by,task.name,task.resource_subtype", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Create a time tracking entry
        api_response = time_tracking_entries_api_instance.create_time_tracking_entry(body, task_gid, opts)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling TimeTrackingEntriesApi->create_time_tracking_entry: %s\n" % e)
  delete_time_tracking_entry: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
    time_tracking_entry_gid = "917392" # str | Globally unique identifier for the time tracking entry.

    
    try:
        # Delete a time tracking entry
        api_response = time_tracking_entries_api_instance.delete_time_tracking_entry(time_tracking_entry_gid)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling TimeTrackingEntriesApi->delete_time_tracking_entry: %s\n" % e)
  get_time_tracking_entries_for_task: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
    task_gid = "321654" # str | The task to operate on.
    opts = {
        'limit': 50, # int | Results per page. The number of objects to return per page. The value must be between 1 and 100.
        'offset': "eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9", # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. *Note: You can only pass in an offset that was returned to you via a previously paginated request.*
        'opt_fields': "created_by,created_by.name,duration_minutes,entered_on,offset,path,uri", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Get time tracking entries for a task
        api_response = time_tracking_entries_api_instance.get_time_tracking_entries_for_task(task_gid, opts)
        for data in api_response:
            pprint(data)
    except ApiException as e:
        print("Exception when calling TimeTrackingEntriesApi->get_time_tracking_entries_for_task: %s\n" % e)
  get_time_tracking_entry: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
    time_tracking_entry_gid = "917392" # str | Globally unique identifier for the time tracking entry.
    opts = {
        'opt_fields': "created_at,created_by,created_by.name,duration_minutes,entered_on,task,task.created_by,task.name,task.resource_subtype", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Get a time tracking entry
        api_response = time_tracking_entries_api_instance.get_time_tracking_entry(time_tracking_entry_gid, opts)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling TimeTrackingEntriesApi->get_time_tracking_entry: %s\n" % e)
  update_time_tracking_entry: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    time_tracking_entries_api_instance = asana.TimeTrackingEntriesApi(api_client)
    body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated fields for the time tracking entry.
    time_tracking_entry_gid = "917392" # str | Globally unique identifier for the time tracking entry.
    opts = {
        'opt_fields': "created_at,created_by,created_by.name,duration_minutes,entered_on,task,task.created_by,task.name,task.resource_subtype", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Update a time tracking entry
        api_response = time_tracking_entries_api_instance.update_time_tracking_entry(body, time_tracking_entry_gid, opts)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling TimeTrackingEntriesApi->update_time_tracking_entry: %s\n" % e)
