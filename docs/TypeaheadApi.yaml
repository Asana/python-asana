TypeaheadApi:
  typeahead_for_workspace: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    typeahead_api_instance = asana.TypeaheadApi(api_client)
    workspace_gid = "12345" # str | Globally unique identifier for the workspace or organization.
    resource_type = "user" # str | The type of values the typeahead should return. You can choose from one of the following: `custom_field`, `goal`, `project`, `project_template`, `portfolio`, `tag`, `task`, `team`, and `user`. Note that unlike in the names of endpoints, the types listed here are in singular form (e.g. `task`). Using multiple types is not yet supported.
    opts = {
        'type': "user", # str | *Deprecated: new integrations should prefer the resource_type field.*
        'query': "Greg", # str | The string that will be used to search for relevant objects. If an empty string is passed in, the API will return results.
        'count': 20, # int | The number of results to return. The default is 20 if this parameter is omitted, with a minimum of 1 and a maximum of 100. If there are fewer results found than requested, all will be returned.
        'opt_fields': "name", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Get objects via typeahead
        api_response = typeahead_api_instance.typeahead_for_workspace(workspace_gid, resource_type, opts)
        for data in api_response:
            pprint(data)
    except ApiException as e:
        print("Exception when calling TypeaheadApi->typeahead_for_workspace: %s\n" % e)
