GoalsApi:
  add_followers: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    body = asana.GoalGidAddFollowersBody({"param1": "value1", "param2": "value2",}) # GoalGidAddFollowersBody | The followers to be added as collaborators
    goal_gid = '12345' # str | Globally unique identifier for the goal.
    opt_fields = ["current_status_update","current_status_update.resource_subtype","current_status_update.title","due_on","followers","followers.name","html_notes","is_workspace_level","liked","likes","likes.user","likes.user.name","metric","metric.can_manage","metric.currency_code","metric.current_display_value","metric.current_number_value","metric.initial_number_value","metric.precision","metric.progress_source","metric.resource_subtype","metric.target_number_value","metric.unit","name","notes","num_likes","owner","owner.name","start_on","status","team","team.name","time_period","time_period.display_name","time_period.end_on","time_period.period","time_period.start_on","workspace","workspace.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Add a collaborator to a goal
      api_response = api_instance.add_followers(body, goal_gid, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->add_followers: %s\n" % e)
  create_goal: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    body = asana.GoalsBody({"param1": "value1", "param2": "value2",}) # GoalsBody | The goal to create.
    opt_fields = ["current_status_update","current_status_update.resource_subtype","current_status_update.title","due_on","followers","followers.name","html_notes","is_workspace_level","liked","likes","likes.user","likes.user.name","metric","metric.can_manage","metric.currency_code","metric.current_display_value","metric.current_number_value","metric.initial_number_value","metric.precision","metric.progress_source","metric.resource_subtype","metric.target_number_value","metric.unit","name","notes","num_likes","owner","owner.name","start_on","status","team","team.name","time_period","time_period.display_name","time_period.end_on","time_period.period","time_period.start_on","workspace","workspace.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Create a goal
      api_response = api_instance.create_goal(body, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->create_goal: %s\n" % e)
  create_goal_metric: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    body = asana.GoalGidSetMetricBody({"param1": "value1", "param2": "value2",}) # GoalGidSetMetricBody | The goal metric to create.
    goal_gid = '12345' # str | Globally unique identifier for the goal.
    opt_fields = ["current_status_update","current_status_update.resource_subtype","current_status_update.title","due_on","followers","followers.name","html_notes","is_workspace_level","liked","likes","likes.user","likes.user.name","metric","metric.can_manage","metric.currency_code","metric.current_display_value","metric.current_number_value","metric.initial_number_value","metric.precision","metric.progress_source","metric.resource_subtype","metric.target_number_value","metric.unit","name","notes","num_likes","owner","owner.name","start_on","status","team","team.name","time_period","time_period.display_name","time_period.end_on","time_period.period","time_period.start_on","workspace","workspace.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Create a goal metric
      api_response = api_instance.create_goal_metric(body, goal_gid, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->create_goal_metric: %s\n" % e)
  delete_goal: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    goal_gid = '12345' # str | Globally unique identifier for the goal.
    
    try:
      # Delete a goal
      api_response = api_instance.delete_goal(goal_gid)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->delete_goal: %s\n" % e)
  get_goal: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    goal_gid = '12345' # str | Globally unique identifier for the goal.
    opt_fields = ["current_status_update","current_status_update.resource_subtype","current_status_update.title","due_on","followers","followers.name","html_notes","is_workspace_level","liked","likes","likes.user","likes.user.name","metric","metric.can_manage","metric.currency_code","metric.current_display_value","metric.current_number_value","metric.initial_number_value","metric.precision","metric.progress_source","metric.resource_subtype","metric.target_number_value","metric.unit","name","notes","num_likes","owner","owner.name","start_on","status","team","team.name","time_period","time_period.display_name","time_period.end_on","time_period.period","time_period.start_on","workspace","workspace.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Get a goal
      api_response = api_instance.get_goal(goal_gid, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->get_goal: %s\n" % e)
  get_goals: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    portfolio = '159874' # str | Globally unique identifier for supporting portfolio. (optional)
    project = '512241' # str | Globally unique identifier for supporting project. (optional)
    is_workspace_level = false # bool | Filter to goals with is_workspace_level set to query value. Must be used with the workspace parameter. (optional)
    team = '31326' # str | Globally unique identifier for the team. (optional)
    workspace = '31326' # str | Globally unique identifier for the workspace. (optional)
    time_periods = ['221693,506165'] # list[str] | Globally unique identifiers for the time periods. (optional)
    limit = 50 # int | Results per page. The number of objects to return per page. The value must be between 1 and 100. (optional)
    offset = 'eyJ0eXAiOJiKV1iQLCJhbGciOiJIUzI1NiJ9' # str | Offset token. An offset to the next page returned by the API. A pagination request will return an offset token, which can be used as an input parameter to the next request. If an offset is not passed in, the API will return the first page of results. 'Note: You can only pass in an offset that was returned to you via a previously paginated request.' (optional)
    opt_fields = ["current_status_update","current_status_update.resource_subtype","current_status_update.title","due_on","followers","followers.name","html_notes","is_workspace_level","liked","likes","likes.user","likes.user.name","metric","metric.can_manage","metric.currency_code","metric.current_display_value","metric.current_number_value","metric.initial_number_value","metric.precision","metric.progress_source","metric.resource_subtype","metric.target_number_value","metric.unit","name","notes","num_likes","offset","owner","owner.name","path","start_on","status","team","team.name","time_period","time_period.display_name","time_period.end_on","time_period.period","time_period.start_on","uri","workspace","workspace.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Get goals
      api_response = api_instance.get_goals(portfolio=portfolio, project=project, is_workspace_level=is_workspace_level, team=team, workspace=workspace, time_periods=time_periods, limit=limit, offset=offset, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->get_goals: %s\n" % e)
  get_parent_goals_for_goal: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    goal_gid = '12345' # str | Globally unique identifier for the goal.
    opt_fields = ["current_status_update","current_status_update.resource_subtype","current_status_update.title","due_on","followers","followers.name","html_notes","is_workspace_level","liked","likes","likes.user","likes.user.name","metric","metric.can_manage","metric.currency_code","metric.current_display_value","metric.current_number_value","metric.initial_number_value","metric.precision","metric.progress_source","metric.resource_subtype","metric.target_number_value","metric.unit","name","notes","num_likes","owner","owner.name","start_on","status","team","team.name","time_period","time_period.display_name","time_period.end_on","time_period.period","time_period.start_on","workspace","workspace.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Get parent goals from a goal
      api_response = api_instance.get_parent_goals_for_goal(goal_gid, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->get_parent_goals_for_goal: %s\n" % e)
  remove_followers: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    body = asana.GoalGidRemoveFollowersBody({"param1": "value1", "param2": "value2",}) # GoalGidRemoveFollowersBody | The followers to be removed as collaborators
    goal_gid = '12345' # str | Globally unique identifier for the goal.
    opt_fields = ["current_status_update","current_status_update.resource_subtype","current_status_update.title","due_on","followers","followers.name","html_notes","is_workspace_level","liked","likes","likes.user","likes.user.name","metric","metric.can_manage","metric.currency_code","metric.current_display_value","metric.current_number_value","metric.initial_number_value","metric.precision","metric.progress_source","metric.resource_subtype","metric.target_number_value","metric.unit","name","notes","num_likes","owner","owner.name","start_on","status","team","team.name","time_period","time_period.display_name","time_period.end_on","time_period.period","time_period.start_on","workspace","workspace.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Remove a collaborator from a goal
      api_response = api_instance.remove_followers(body, goal_gid, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->remove_followers: %s\n" % e)
  update_goal: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    body = asana.GoalsGoalGidBody({"param1": "value1", "param2": "value2",}) # GoalsGoalGidBody | The updated fields for the goal.
    goal_gid = '12345' # str | Globally unique identifier for the goal.
    opt_fields = ["current_status_update","current_status_update.resource_subtype","current_status_update.title","due_on","followers","followers.name","html_notes","is_workspace_level","liked","likes","likes.user","likes.user.name","metric","metric.can_manage","metric.currency_code","metric.current_display_value","metric.current_number_value","metric.initial_number_value","metric.precision","metric.progress_source","metric.resource_subtype","metric.target_number_value","metric.unit","name","notes","num_likes","owner","owner.name","start_on","status","team","team.name","time_period","time_period.display_name","time_period.end_on","time_period.period","time_period.start_on","workspace","workspace.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Update a goal
      api_response = api_instance.update_goal(body, goal_gid, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->update_goal: %s\n" % e)
  update_goal_metric: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.GoalsApi(asana.ApiClient(configuration))
    body = asana.GoalGidSetMetricCurrentValueBody({"param1": "value1", "param2": "value2",}) # GoalGidSetMetricCurrentValueBody | The updated fields for the goal metric.
    goal_gid = '12345' # str | Globally unique identifier for the goal.
    opt_fields = ["current_status_update","current_status_update.resource_subtype","current_status_update.title","due_on","followers","followers.name","html_notes","is_workspace_level","liked","likes","likes.user","likes.user.name","metric","metric.can_manage","metric.currency_code","metric.current_display_value","metric.current_number_value","metric.initial_number_value","metric.precision","metric.progress_source","metric.resource_subtype","metric.target_number_value","metric.unit","name","notes","num_likes","owner","owner.name","start_on","status","team","team.name","time_period","time_period.display_name","time_period.end_on","time_period.period","time_period.start_on","workspace","workspace.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Update a goal metric
      api_response = api_instance.update_goal_metric(body, goal_gid, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling GoalsApi->update_goal_metric: %s\n" % e)
