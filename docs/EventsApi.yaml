EventsApi:
  get_events: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    # Configure OAuth2 access token for authorization: oauth2
    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_PERSONAL_ACCESS_TOKEN>'
    
    # create an instance of the API class
    api_instance = asana.EventsApi(asana.ApiClient(configuration))
    resource = '12345' # str | A resource ID to subscribe to. The resource can be a task or project.
    sync = 'de4774f6915eae04714ca93bb2f5ee81' # str | A sync token received from the last request, or none on first sync. Events will be returned from the point in time that the sync token was generated. *Note: On your first request, omit the sync token. The response will be the same as for an expired sync token, and will include a new valid sync token.If the sync token is too old (which may happen from time to time) the API will return a `412 Precondition Failed` error, and include a fresh sync token in the response.* (optional)
    opt_fields = ["action","change","change.action","change.added_value","change.field","change.new_value","change.removed_value","created_at","parent","parent.name","resource","resource.name","type","user","user.name"] # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include. (optional)
    
    try:
      # Get events on a resource
      api_response = api_instance.get_events(resource, sync=sync, opt_fields=opt_fields)
      pprint(api_response)
    except ApiException as e:
      print("Exception when calling EventsApi->get_events: %s\n" % e)
