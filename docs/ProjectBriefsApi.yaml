ProjectBriefsApi:
  create_project_brief: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    project_briefs_api_instance = asana.ProjectBriefsApi(api_client)
    body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The project brief to create.
    project_gid = "1331" # str | Globally unique identifier for the project.
    opts = {
        'opt_fields': "html_text,permalink_url,project,project.name,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Create a project brief
        api_response = project_briefs_api_instance.create_project_brief(body, project_gid, opts)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling ProjectBriefsApi->create_project_brief: %s\n" % e)
  delete_project_brief: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    project_briefs_api_instance = asana.ProjectBriefsApi(api_client)
    project_brief_gid = "12345" # str | Globally unique identifier for the project brief.

    
    try:
        # Delete a project brief
        api_response = project_briefs_api_instance.delete_project_brief(project_brief_gid)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling ProjectBriefsApi->delete_project_brief: %s\n" % e)
  get_project_brief: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    project_briefs_api_instance = asana.ProjectBriefsApi(api_client)
    project_brief_gid = "12345" # str | Globally unique identifier for the project brief.
    opts = {
        'opt_fields': "html_text,permalink_url,project,project.name,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Get a project brief
        api_response = project_briefs_api_instance.get_project_brief(project_brief_gid, opts)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling ProjectBriefsApi->get_project_brief: %s\n" % e)
  update_project_brief: |-
    import asana
    from asana.rest import ApiException
    from pprint import pprint

    configuration = asana.Configuration()
    configuration.access_token = '<YOUR_ACCESS_TOKEN>'
    api_client = asana.ApiClient(configuration)
    
    # create an instance of the API class
    project_briefs_api_instance = asana.ProjectBriefsApi(api_client)
    body = {"data": {"<PARAM_1>": "<VALUE_1>", "<PARAM_2>": "<VALUE_2>",}} # dict | The updated fields for the project brief.
    project_brief_gid = "12345" # str | Globally unique identifier for the project brief.
    opts = {
        'opt_fields': "html_text,permalink_url,project,project.name,text,title", # list[str] | This endpoint returns a compact resource, which excludes some properties by default. To include those optional properties, set this query parameter to a comma-separated list of the properties you wish to include.
    }
    
    try:
        # Update a project brief
        api_response = project_briefs_api_instance.update_project_brief(body, project_brief_gid, opts)
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling ProjectBriefsApi->update_project_brief: %s\n" % e)
